// <auto-generated />
using System;
using BankingSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankingSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankingSystem.Models.AccountType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab80a42f-7ea5-4d6e-8f84-7b041e95794d"),
                            Name = "Liability"
                        },
                        new
                        {
                            Id = new Guid("ac39bf8b-36a0-4523-a0b2-8ea47172e6a8"),
                            Name = "Asset"
                        });
                });

            modelBuilder.Entity("BankingSystem.Models.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AccountType_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountType_FK");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("BankingSystem.Models.BankAccountPosting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankTransationId_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BankTransationId_FK");

                    b.ToTable("BankAccountPostings");
                });

            modelBuilder.Entity("BankingSystem.Models.BankTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<Guid>("BankAccount_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<Guid>("PaymentMethod_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankAccount_FK");

                    b.HasIndex("PaymentMethod_FK");

                    b.ToTable("BankTransactions");
                });

            modelBuilder.Entity("BankingSystem.Models.PaymentMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e8ad561-4bc7-4995-b731-b7c61f93b099"),
                            Name = "Cash"
                        },
                        new
                        {
                            Id = new Guid("75e898a7-44e6-4552-b57d-777181c95290"),
                            Name = "Cheque"
                        },
                        new
                        {
                            Id = new Guid("5d40a7ce-3454-406f-bf1e-2f52cbd2d5c6"),
                            Name = "NEFT"
                        },
                        new
                        {
                            Id = new Guid("9b57941f-466c-4a86-bb41-c5b5811d3a36"),
                            Name = "RTGS"
                        },
                        new
                        {
                            Id = new Guid("87e7f6b5-82fa-460d-ae43-52d93bf7831e"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("BankingSystem.Models.BankAccount", b =>
                {
                    b.HasOne("BankingSystem.Models.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountType_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");
                });

            modelBuilder.Entity("BankingSystem.Models.BankAccountPosting", b =>
                {
                    b.HasOne("BankingSystem.Models.BankTransaction", "BankTransaction")
                        .WithMany()
                        .HasForeignKey("BankTransationId_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankTransaction");
                });

            modelBuilder.Entity("BankingSystem.Models.BankTransaction", b =>
                {
                    b.HasOne("BankingSystem.Models.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccount_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankingSystem.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethod_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("PaymentMethod");
                });
#pragma warning restore 612, 618
        }
    }
}
