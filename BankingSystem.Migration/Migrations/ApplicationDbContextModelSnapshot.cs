// <auto-generated />
using System;
using BankingSystem.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankingSystem.DataBase.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankingSystem.DataBase.Models.AccountType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f878e13-f1d9-474d-ae98-6df3fe3b758d"),
                            Name = "Liability"
                        },
                        new
                        {
                            Id = new Guid("9c1fc495-2f69-4a23-9161-e645acfebfa9"),
                            Name = "Asset"
                        });
                });

            modelBuilder.Entity("BankingSystem.DataBase.Models.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AccountType_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountType_FK");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("BankingSystem.DataBase.Models.BankAccountPosting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankTransationId_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BankTransationId_FK");

                    b.ToTable("BankAccountPostings");
                });

            modelBuilder.Entity("BankingSystem.DataBase.Models.BankTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<Guid>("BankAccount_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PaymentMethod_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankAccount_FK");

                    b.HasIndex("PaymentMethod_FK");

                    b.ToTable("BankTransactions");
                });

            modelBuilder.Entity("BankingSystem.DataBase.Models.PaymentMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4afad743-de20-41cd-97ad-2a27fcb79f34"),
                            Name = "Cash"
                        },
                        new
                        {
                            Id = new Guid("5720e2d6-69aa-48c1-8e6d-e267eeb3f8c0"),
                            Name = "Cheque"
                        },
                        new
                        {
                            Id = new Guid("7b033d28-374d-4873-a46f-af7780639b3e"),
                            Name = "NEFT"
                        },
                        new
                        {
                            Id = new Guid("bbd9e10e-96a8-4978-8a42-c77910476384"),
                            Name = "RTGS"
                        },
                        new
                        {
                            Id = new Guid("3cecfffe-5ada-43af-b7fb-136dced78203"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("BankingSystem.DataBase.Models.BankAccount", b =>
                {
                    b.HasOne("BankingSystem.DataBase.Models.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountType_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");
                });

            modelBuilder.Entity("BankingSystem.DataBase.Models.BankAccountPosting", b =>
                {
                    b.HasOne("BankingSystem.DataBase.Models.BankTransaction", "BankTransaction")
                        .WithMany()
                        .HasForeignKey("BankTransationId_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankTransaction");
                });

            modelBuilder.Entity("BankingSystem.DataBase.Models.BankTransaction", b =>
                {
                    b.HasOne("BankingSystem.DataBase.Models.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccount_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankingSystem.DataBase.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethod_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("PaymentMethod");
                });
#pragma warning restore 612, 618
        }
    }
}
